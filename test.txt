기존에 메일을 보내던 방식은 아래와 같아
이제 이걸 타임리프를 이용해서 메일을 보낼 때 템플릿을 전송해서 메일이 발송되도록 하고싶은데 어떻게 수정해야해? 타임리프 세팅은 완료했어
//컨트롤러
List<String> mailList = this.itoCbReportMail();
mailList.addAll(chargebackDao.getDmMailEmailList(new ArrayList<>(Collections.singletonList(corp_cd))));
if(mailList.size() > 0){
    CmMail.sendMail(new Mail(null, null, mailList, null, "NEW ITO Chargeback 월간비용 보고서", CmMail.itoCbReport(ym, WEB_FULL_URL + "/report/cb_lookup_corp.do")));
}


//Mail.class
@Data
public class Mail {
 private String fromName;
 private String fromEmail;
 private List<String> toList;
 private List<String> ccMailList;

 private String ccMails;
 private String title;
 private String content;
 private String logMassage;
 private Boolean is_send = false;

    public Mail(String fromName, String fromEmail, List<String> toList, List<String> ccMailList, String title, String content) {
        this.fromName = fromName == null ? "디지털예산운영시스템" : fromName;
        this.fromEmail = fromEmail == null ? "dbos@amorepacific.com" : fromName;
        this.toList = toList;
        this.ccMailList = ccMailList;
        this.title = title;
        this.content = content;

        if (ccMailList != null && ccMailList.size() > 0) {
            this.ccMails = StringUtils.join(this.ccMailList, ",");
        }
    }
}

//CmMail.class
public class CmMail extends CmPathInfo {

    private static final Logger logger = LoggerFactory.getLogger(CmMail.class);
    private static Properties mailProp;
    private static String mailServerIp = "";
    private static final String SERVER_TYPE = CmPathInfo.getSERVER_TYPE();

    public static CommonService commonService;

    private static boolean initMailConfig() {
        boolean result = false;
        try {
            Properties props = Resources.getResourceAsProperties("project.properties");
            mailServerIp = CmFunction.getStringValue(props.getProperty("MAILER_SERVER"));
            result = true;
        } catch (Exception e) {
            logger.error("### CmMail.initMailConfig ###");
            logger.error("exception", e);
        }
        return result;
    }

    private static void initMailer() {
        try {
            mailProp = new Properties();
            mailProp.put("mail.smtp.host", mailServerIp);
            mailProp.put("mail.smtp.auth", "false");
        } catch (Exception e) {
            logger.error("exception", e);
        }
    }

    /**
     * 메일 보내기
     */
    public static boolean sendMail(Mail mail) {
        if (!SERVER_TYPE.equals("REAL")) { //운영계 아니면 일부사용자에게만 메일발송. 필요시 추가
            List<String> devMailList = new ArrayList<>();
            devMailList.add("like10495@amorepacific.com");

            mail.setToList(devMailList);
            mail.setCcMailList(null);
        }

        if(SERVER_TYPE.equals("REAL")){ // 운영계의 모든 메일에 김면수님 수신인으로 추가
            List<String> orgToList = mail.getToList();
            List<String> newToList = new ArrayList<>();
            for(int i = 0 ; i < orgToList.size() ; i++){
                newToList.add(orgToList.get(i));
            }
            newToList.add("myunsookim@amorepacific.com");
            mail.setToList(newToList);
        }

        List<String> orgMailList = mail.getToList();
        List<String> mailList = new ArrayList<>();

        logger.info("@@@@@@@@@@ MAIL TITLE @@@@@@@@@@ " + mail.getTitle());
        if (!initMailConfig()) {
            mail.setLogMassage("이메일 환경설정 내용을 찾을 수 없습니다.");
            return false;
        }
        initMailer();

        Session session = null;
        try {
            session = Session.getInstance(mailProp);
        } catch (Exception e) {
            logger.error("### CmMail.send ###");
            logger.error("exception", e);
            mail.setLogMassage("메일 초기화중 오류가 발생했습니다.");
            return false;
        }
        try {
            MimeMessage msg = new MimeMessage(session);
            Multipart mp = new MimeMultipart();
            MimeBodyPart msg_part = new MimeBodyPart();
            msg.setContentLanguage(new String[]{"EUC-KR", "8859_1", "UTF-8"});
            mail.setFromName(MimeUtility.encodeText(mail.getFromName(), "EUC-KR", "Q"));
            msg.setFrom(new InternetAddress(mail.getFromName() + "<" + mail.getFromEmail() + ">"));

            // 스펨메일 방지용으로 추가
            InternetAddress[] address = {new InternetAddress(mail.getFromEmail())};
            msg.setReplyTo(address);

            //2023.07.12 자동메일 제외할 수신자 이메일
            List<String> exceptMailList  = new ArrayList<>();
            exceptMailList.add("doc1@amorepacific.com");
            exceptMailList.add("doc2@amorepacific.com");
            exceptMailList.add("bis@amorepacific.com");
            exceptMailList.add("doc@amorepacific.com");
            exceptMailList.add("isc@amorepacific.com");
            exceptMailList.add("privacy@amorepacific.com");
            exceptMailList.add("itasset@amorepacific.com");
            exceptMailList.add("webex@amorepacific.com");
            exceptMailList.add("jongmahn@amorepacific.com");// 2023.08.07 박종만님 제외

            /* 수신자 목록 제거한 메일 리스트 (테스트 시 mail.getToList(), 운영 orgMailList) */
            mailList = (SERVER_TYPE.equals("REAL") ? orgMailList : mail.getToList())
                       .stream().filter(e -> !exceptMailList.contains(e)).collect(Collectors.toList());

            InternetAddress[] addresscc = new InternetAddress[mailList.size()];
            for (int i = 0; i < mailList.size(); i++) {
                addresscc[i] = new InternetAddress(mailList.get(i));
             }
            msg.setRecipients(Message.RecipientType.TO, addresscc);

            if (mail.getCcMailList() != null && mail.getCcMailList().size() > 0) {
                addresscc = new InternetAddress[mail.getCcMailList().size()];
                for (int i = 0; i < mail.getCcMailList().size(); i++) {
                    addresscc[i] = new InternetAddress(mail.getCcMailList().get(i));
                }
                msg.setRecipients(Message.RecipientType.CC, addresscc);
            }

            msg.setSubject(MimeUtility.encodeText(mail.getTitle(), "EUC-KR", "Q"));
            msg_part.setContent(mail.getContent(), "text/html; charset=utf-8");
            mp.addBodyPart(msg_part);
            msg.setContent(mp);
            Transport tr = session.getTransport("smtp");
            tr.connect(mailServerIp, null, null);
            tr.sendMessage(msg, msg.getAllRecipients()); /// 메일보내는곳
            tr.close();
            mail.setIs_send(true);
        } catch (MessagingException e) {
            logger.error("### CmMail.send(MessagingException) ###");
            mail.setLogMassage("메일 전송시 오류가 발생하였습니다.");
            logger.error("exception", e);
        } catch (IOException e) {
            logger.error("### CmMail.send(IOException) ###");
            mail.setLogMassage("메일 전송시 오류가 발생하였습니다.");
            logger.error("exception", e);
        } catch (Exception e) {
            logger.error("### CmMail.send(Exception) ###");
            mail.setLogMassage("메일 전송시 오류가 발생하였습니다.");
            logger.error("exception", e);
        } finally {
            // 메일로그 남기기
            mail.setToList(mailList);
            commonService.insertMailLog2(mail);
        }
        return mail.getIs_send();
    }

    private static StringBuffer header = new StringBuffer(
    "\n<!DOCTYPE html>"
        + "\n<html lang='ko'>"
        + "\n<head>"
        + "\n<meta charset='UTF-8'>"
        + "\n<meta http-equiv='X-UA-Compatible' content='IE=edge'>"
        + "\n<meta http-equiv='Expires' content='-1'>"
        + "\n<meta http-equiv='Pragma' content='no-cache'>"
        + "\n<meta http-equiv='Cache-Control' content='No-Cache'>"
        + "\n<meta name='robots' content='noindex'>"
        + "\n<meta name='googlebot' content='noindex'>"
        + "\n<title>DBOS 디지털예산운영시스템</title>"
        + "\n</head>"
        + "\n<body style='padding:0; margin:0; font-family:'맑은 고딕',Malgun Gothic,Dotum,sans-serif; color:#666; letter-spacing:-0.08em'>"
        + "\n<table border='0' cellpadding='0' cellspacing='0' style='width:680px; margin:20px auto; padding:0 0; border:1px solid #ddd; font-size:14px; font-family:'맑은 고딕',Malgun Gothic,Dotum,sans-serif; color:#000;'>"
        + "\n<tr style='padding:0;margin:0;'>"
        + "\n<td style='height:120px; background:linear-gradient(135deg, #152c4c, #274d73);'>"
        + "\n<a href='#' target='_blank' style='display: inline-block; text-decoration: none; color: #fff; letter-spacing: -0.04em;'>"
        + "\n<p style='margin: 0 0 0 40px; font-size: 25px; font-weight: 100; color: #fff; letter-spacing: -0.04em;'>"
        + "\n<em style='font-size: 25px; font-style: normal; font-weight: bold; color: #fff; letter-spacing: -0.04em;'>AMORE</em> PACIFIC"
        + "\n</p>"
        + "\n<p style=' margin: 0px 0 0 40px; font-style: normal; color: #fff;letter-spacing: -0.04em;'>"
        + "\n<em style='font-size: 13px; font-style: normal; font-weight: 700; color: #fff; letter-spacing: -0.04em;'>디지털예산운영시스템</em>"
        + "\n<span style='display: inline-block; margin: 0 0 0 3px; font-size: 12px; color: #fff;'>AP Digital Budget Operating System</span>"
        + "\n</p>"
        + "\n</a>"
        + "\n</td>"
        + "\n</tr>");

private static StringBuffer footer = new StringBuffer(
"\n<tr style='padding:0; margin:0;'>"
        + "\n<td style='padding:14px 40px 14px; font-size:16px; color: #666; background: #f5f5f5; text-align: center;'>"
        + "\n<ul style='padding: 10px 0px; font-size: 12px; text-align: left;'>"
        + "\n<li style='margin-bottom: 8px; font-size: 12px; color: #888; letter-spacing:-0.08em; list-style: none;'>"
        + "\n<span style='display: inline-block; width: 2.5px; height: 9px; background: #aaa; margin-right: 9px;'> </span>바로가기 클릭 시 새창으로 연결됩니다."
        + "\n</li>"
        + "\n<li style='margin-bottom: 8px; font-size: 12px; color: #888; letter-spacing:-0.08em; list-style: none;'>"
        + "\n<span style='display: inline-block; width: 2.5px; height: 9px; background: #aaa; margin-right: 9px;'> </span>PC에서만 이용 가능합니다. (권장 해상도 1920*1080 이상)"
        + "\n</li>"
        + "\n<li style='font-size: 12px; color: #888; letter-spacing:-0.08em; list-style: none;'>"
        + "\n<span style='display: inline-block; width: 2.5px; height: 9px; background: #aaa; margin-right: 9px;'> </span>AP-ON 시스템과 동일한 아이디/비밀번호로 로그인 가능합니다."
        + "\n</li>"
        + "\n</ul>"
        + "\n</td>"
        + "\n</tr>"
        + "\n<tr style='padding:0; margin:0;'>"
        + "\n<td style='height:40px; text-align: center; padding: 0 24px; letter-spacing: -0.04em; color: #999; font-size: 12px;'>"
        + "\n&copy; AMOREPACIFIC CORPORATION. ALL RIGHTS RESERVED."
        + "\n</td>"
        + "\n</tr>"
        + "\n</table>"
        + "\n</body>"
        + "\n</html>");
        
    public static String itoCbReport(String ym, String link) {
        StringBuffer sb = new StringBuffer();
        sb.append(header);
        sb.append("<tr style='padding:0; margin:0;'>");
		sb.append("<td style='padding:80px 40px 30px; font-size:30px; color: #666; letter-spacing:-0.06em;'>");
		sb.append("<span style='color:#264b79; font-weight: 700; letter-spacing:-0.06em; font-size: 30px;'>NEW ITO Chargeback 월간비용 보고서</span>");
		sb.append("</td>");
		sb.append("</tr>");
		sb.append("<tr style='padding:0; margin:0;'>");
		sb.append("<td style='padding:25px 40px 24px; font-size:16px; color:#666; line-height:1.8;'>");

        sb.append("<p style='font-size: 16px; color:#666; letter-spacing:-0.06em; line-height: 1.8;'>안녕하세요. 디지털예산운영시스템(DBOS) 입니다.</p>");
        sb.append("<p style='font-size: 16px; color:#666; letter-spacing:-0.06em; line-height: 1.8; margin-top: 16px;'><span style='font-size: 16px;color: #062c5e; font-weight: 700; letter-spacing:-0.06em;'>New ITO </span><span style='font-size: 16px; font-weight: 700; color:#F44336;'>"+ym.substring(0, 4)+"년 "+Integer.parseInt(ym.substring(4, 6))+"월 </span><span style='font-size: 16px;color: #062c5e; font-weight: 700; letter-spacing:-0.06em;'>관계사 Chargeback 비용 보고서</span>를 아래의 메뉴에서 확인바랍니다.<br><br>");
        sb.append("</p>");
        sb.append("<p style='font-size: 16px; color:#666; letter-spacing:-0.06em; line-height: 1.8; margin-top: 16px;'>(메뉴) <span style='font-size: 16px;color: #062c5e; font-weight: 700; letter-spacing:-0.06em;'>리포트 → Chargeback 대상 법인별 조회</span><br><br>");
        sb.append("</p>");
        sb.append("<p style='font-size: 16px; color:#666; letter-spacing:-0.06em; line-height: 1.8; margin-top: 16px;'>도움이 필요하시면, Division 예산관리자에게 연락 주시기 바랍니다.</p>");
        sb.append("<p style='font-size: 16px; color:#666; letter-spacing:-0.06em; line-height: 1.8; margin-top: 16px;'>감사합니다.</p>");
        sb.append("<p style='font-size: 16px; color:#666; letter-spacing:-0.06em; line-height: 1.8; margin-top: 16px;'>");
        sb.append("<span style='display: inline-block; font-size: 16px;color: #333; font-weight: 700; letter-spacing:-0.06em;  margin-top: 10px;'>예산관리자</span><br>");
        sb.append("- 디지털 기술운영Division 디지털 운영기획팀 김동현<br>");
        sb.append("</p>");

		sb.append("<p style='font-size: 16px; color:#666; letter-spacing:-0.1em; line-height: 1.8; margin-top: 80px;'>");
		sb.append("<a href='"+link+"' target='_blank' style='display: block; text-align: center; text-decoration: none; color: #fff; letter-spacing: -0.04em; background: #274773; padding: 13px 0; box-shadow: 0 3px 5px rgba(0,0,0,0.1); border-radius: 10px;' title='AP 예산운영시스템'>");
		sb.append("<span style='color: #fff; letter-spacing: -0.04em; font-size: 18px; font-weight: 700;'>Chargeback 대상 법인별 조회 바로가기</span>");
		sb.append("</a>");
		sb.append("</p>");
		sb.append("</td>");
		sb.append("</tr>");
        sb.append(footer);
        return sb.toString();
    }
}
